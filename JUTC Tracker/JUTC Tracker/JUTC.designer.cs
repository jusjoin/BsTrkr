#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.488
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JUTC_Tracker
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="JUTC")]
	public partial class JUTCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBuse(Buse instance);
    partial void UpdateBuse(Buse instance);
    partial void DeleteBuse(Buse instance);
    partial void InsertTravelRoute(TravelRoute instance);
    partial void UpdateTravelRoute(TravelRoute instance);
    partial void DeleteTravelRoute(TravelRoute instance);
    partial void InsertBusRoute(BusRoute instance);
    partial void UpdateBusRoute(BusRoute instance);
    partial void DeleteBusRoute(BusRoute instance);
    partial void InsertPassengerNotice(PassengerNotice instance);
    partial void UpdatePassengerNotice(PassengerNotice instance);
    partial void DeletePassengerNotice(PassengerNotice instance);
    partial void InsertPhoneMessage(PhoneMessage instance);
    partial void UpdatePhoneMessage(PhoneMessage instance);
    partial void DeletePhoneMessage(PhoneMessage instance);
    partial void InsertStop(Stop instance);
    partial void UpdateStop(Stop instance);
    partial void DeleteStop(Stop instance);
    partial void InsertStopsLog(StopsLog instance);
    partial void UpdateStopsLog(StopsLog instance);
    partial void DeleteStopsLog(StopsLog instance);
    partial void InsertTimeTable(TimeTable instance);
    partial void UpdateTimeTable(TimeTable instance);
    partial void DeleteTimeTable(TimeTable instance);
    #endregion
		
		public JUTCDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["JUTCConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public JUTCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public JUTCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public JUTCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public JUTCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Buse> Buses
		{
			get
			{
				return this.GetTable<Buse>();
			}
		}
		
		public System.Data.Linq.Table<TravelRoute> TravelRoutes
		{
			get
			{
				return this.GetTable<TravelRoute>();
			}
		}
		
		public System.Data.Linq.Table<BusRoute> BusRoutes
		{
			get
			{
				return this.GetTable<BusRoute>();
			}
		}
		
		public System.Data.Linq.Table<Driver> Drivers
		{
			get
			{
				return this.GetTable<Driver>();
			}
		}
		
		public System.Data.Linq.Table<PassengerNotice> PassengerNotices
		{
			get
			{
				return this.GetTable<PassengerNotice>();
			}
		}
		
		public System.Data.Linq.Table<PhoneMessage> PhoneMessages
		{
			get
			{
				return this.GetTable<PhoneMessage>();
			}
		}
		
		public System.Data.Linq.Table<Stop> Stops
		{
			get
			{
				return this.GetTable<Stop>();
			}
		}
		
		public System.Data.Linq.Table<StopsLog> StopsLogs
		{
			get
			{
				return this.GetTable<StopsLog>();
			}
		}
		
		public System.Data.Linq.Table<TimeTable> TimeTables
		{
			get
			{
				return this.GetTable<TimeTable>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteBusRoute")]
		public int DeleteBusRoute([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BusLicPlate", DbType="VarChar(6)")] string busLicPlate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), busLicPlate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectTrackedBuses")]
		public ISingleResult<SelectTrackedBusesResult> SelectTrackedBuses()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SelectTrackedBusesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertBus")]
		public int InsertBus([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LicensePlate", DbType="VarChar(6)")] string licensePlate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="VarChar(50)")] string type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="VarChar(15)")] string status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SeatCap", DbType="Int")] System.Nullable<int> seatCap)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), licensePlate, type, status, seatCap);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertBusRoute")]
		public int InsertBusRoute([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RouteNo", DbType="VarChar(5)")] string routeNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BusLicPlate", DbType="VarChar(6)")] string busLicPlate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TabledTime", DbType="VarChar(7)")] string tabledTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistToFinalStop", DbType="Float")] System.Nullable<double> distToFinalStop, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistToNextStop", DbType="Float")] System.Nullable<double> distToNextStop, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SpdAtStops", DbType="VarChar(350)")] string spdAtStops, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AvgSpeed", DbType="Float")] System.Nullable<double> avgSpeed, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StopsToGo", DbType="Int")] System.Nullable<int> stopsToGo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NextStop", DbType="VarChar(15)")] string nextStop, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastStop", DbType="VarChar(15)")] string lastStop, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ETANextStop", DbType="Int")] System.Nullable<int> eTANextStop, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ETAFinalStop", DbType="Int")] System.Nullable<int> eTAFinalStop)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), routeNo, busLicPlate, tabledTime, distToFinalStop, distToNextStop, spdAtStops, avgSpeed, stopsToGo, nextStop, lastStop, eTANextStop, eTAFinalStop);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertPassengerNotice")]
		public int InsertPassengerNotice([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(25)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StopNo", DbType="VarChar(15)")] string stopNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RouteNo", DbType="VarChar(5)")] string routeNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TabledTime", DbType="VarChar(7)")] string tabledTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CellNo", DbType="VarChar(7)")] string cellNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(50)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, stopNo, routeNo, tabledTime, cellNo, email);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertPhoneMessage")]
		public int InsertPhoneMessage([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(25)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Time", DbType="DateTime")] System.Nullable<System.DateTime> time, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Message", DbType="VarChar(140)")] string message)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, time, message);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertRoute")]
		public int InsertRoute([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RouteNo", DbType="VarChar(5)")] string routeNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RouteStops", DbType="VarChar(350)")] string routeStops, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RouteDistances", DbType="VarChar(350)")] string routeDistances, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalDistance", DbType="Float")] System.Nullable<double> totalDistance, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TripTime", DbType="Int")] System.Nullable<int> tripTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), routeNo, routeStops, routeDistances, totalDistance, tripTime);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertStop")]
		public int InsertStop([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StopNo", DbType="VarChar(15)")] string stopNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Lattitude", DbType="Float")] System.Nullable<double> lattitude, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Longitude", DbType="Float")] System.Nullable<double> longitude, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Location", DbType="VarChar(30)")] string location, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="VarChar(10)")] string type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), stopNo, lattitude, longitude, location, type);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertStopLog")]
		public int InsertStopLog([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RouteNo", DbType="VarChar(5)")] string routeNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StopNo", DbType="VarChar(10)")] string stopNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StopDateTime", DbType="DateTime")] System.Nullable<System.DateTime> stopDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BusLicPlate", DbType="VarChar(6)")] string busLicPlate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TabledTime", DbType="VarChar(7)")] string tabledTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), routeNo, stopNo, stopDateTime, busLicPlate, tabledTime);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectAllStops")]
		public ISingleResult<SelectAllStopsResult> SelectAllStops()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SelectAllStopsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectStopsByRoute")]
		public ISingleResult<SelectStopsByRouteResult> SelectStopsByRoute([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RouteNumber", DbType="VarChar(10)")] string routeNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), routeNumber);
			return ((ISingleResult<SelectStopsByRouteResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectDistinctRoutes")]
		public ISingleResult<SelectDistinctRoutesResult> SelectDistinctRoutes()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SelectDistinctRoutesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectAllRoutes")]
		public ISingleResult<SelectAllRoutesResult> SelectAllRoutes()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SelectAllRoutesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectStopsByRouteFull")]
		public ISingleResult<SelectStopsByRouteFullResult> SelectStopsByRouteFull([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string stopNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), stopNo);
			return ((ISingleResult<SelectStopsByRouteFullResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buses")]
	public partial class Buse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LicensePlate;
		
		private string _Type;
		
		private string _BusStatus;
		
		private System.Nullable<int> _SeatCap;
		
		private EntityRef<BusRoute> _BusRoute;
		
		private EntitySet<StopsLog> _StopsLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLicensePlateChanging(string value);
    partial void OnLicensePlateChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnBusStatusChanging(string value);
    partial void OnBusStatusChanged();
    partial void OnSeatCapChanging(System.Nullable<int> value);
    partial void OnSeatCapChanged();
    #endregion
		
		public Buse()
		{
			this._BusRoute = default(EntityRef<BusRoute>);
			this._StopsLogs = new EntitySet<StopsLog>(new Action<StopsLog>(this.attach_StopsLogs), new Action<StopsLog>(this.detach_StopsLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicensePlate", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LicensePlate
		{
			get
			{
				return this._LicensePlate;
			}
			set
			{
				if ((this._LicensePlate != value))
				{
					this.OnLicensePlateChanging(value);
					this.SendPropertyChanging();
					this._LicensePlate = value;
					this.SendPropertyChanged("LicensePlate");
					this.OnLicensePlateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusStatus", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string BusStatus
		{
			get
			{
				return this._BusStatus;
			}
			set
			{
				if ((this._BusStatus != value))
				{
					this.OnBusStatusChanging(value);
					this.SendPropertyChanging();
					this._BusStatus = value;
					this.SendPropertyChanged("BusStatus");
					this.OnBusStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatCap", DbType="Int")]
		public System.Nullable<int> SeatCap
		{
			get
			{
				return this._SeatCap;
			}
			set
			{
				if ((this._SeatCap != value))
				{
					this.OnSeatCapChanging(value);
					this.SendPropertyChanging();
					this._SeatCap = value;
					this.SendPropertyChanged("SeatCap");
					this.OnSeatCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buse_BusRoute", Storage="_BusRoute", ThisKey="LicensePlate", OtherKey="BusLicPlate", IsUnique=true, IsForeignKey=false)]
		public BusRoute BusRoute
		{
			get
			{
				return this._BusRoute.Entity;
			}
			set
			{
				BusRoute previousValue = this._BusRoute.Entity;
				if (((previousValue != value) 
							|| (this._BusRoute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusRoute.Entity = null;
						previousValue.Buse = null;
					}
					this._BusRoute.Entity = value;
					if ((value != null))
					{
						value.Buse = this;
					}
					this.SendPropertyChanged("BusRoute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buse_StopsLog", Storage="_StopsLogs", ThisKey="LicensePlate", OtherKey="BusLicPlate")]
		public EntitySet<StopsLog> StopsLogs
		{
			get
			{
				return this._StopsLogs;
			}
			set
			{
				this._StopsLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StopsLogs(StopsLog entity)
		{
			this.SendPropertyChanging();
			entity.Buse = this;
		}
		
		private void detach_StopsLogs(StopsLog entity)
		{
			this.SendPropertyChanging();
			entity.Buse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TravelRoutes")]
	public partial class TravelRoute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RouteNo;
		
		private string _RouteStops;
		
		private string _RouteDistances;
		
		private double _TotalDistance;
		
		private System.Nullable<int> _TripTime;
		
		private EntitySet<BusRoute> _BusRoutes;
		
		private EntitySet<PassengerNotice> _PassengerNotices;
		
		private EntitySet<StopsLog> _StopsLogs;
		
		private EntitySet<TimeTable> _TimeTables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRouteNoChanging(string value);
    partial void OnRouteNoChanged();
    partial void OnRouteStopsChanging(string value);
    partial void OnRouteStopsChanged();
    partial void OnRouteDistancesChanging(string value);
    partial void OnRouteDistancesChanged();
    partial void OnTotalDistanceChanging(double value);
    partial void OnTotalDistanceChanged();
    partial void OnTripTimeChanging(System.Nullable<int> value);
    partial void OnTripTimeChanged();
    #endregion
		
		public TravelRoute()
		{
			this._BusRoutes = new EntitySet<BusRoute>(new Action<BusRoute>(this.attach_BusRoutes), new Action<BusRoute>(this.detach_BusRoutes));
			this._PassengerNotices = new EntitySet<PassengerNotice>(new Action<PassengerNotice>(this.attach_PassengerNotices), new Action<PassengerNotice>(this.detach_PassengerNotices));
			this._StopsLogs = new EntitySet<StopsLog>(new Action<StopsLog>(this.attach_StopsLogs), new Action<StopsLog>(this.detach_StopsLogs));
			this._TimeTables = new EntitySet<TimeTable>(new Action<TimeTable>(this.attach_TimeTables), new Action<TimeTable>(this.detach_TimeTables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteNo", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RouteNo
		{
			get
			{
				return this._RouteNo;
			}
			set
			{
				if ((this._RouteNo != value))
				{
					this.OnRouteNoChanging(value);
					this.SendPropertyChanging();
					this._RouteNo = value;
					this.SendPropertyChanged("RouteNo");
					this.OnRouteNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteStops", DbType="VarChar(350) NOT NULL", CanBeNull=false)]
		public string RouteStops
		{
			get
			{
				return this._RouteStops;
			}
			set
			{
				if ((this._RouteStops != value))
				{
					this.OnRouteStopsChanging(value);
					this.SendPropertyChanging();
					this._RouteStops = value;
					this.SendPropertyChanged("RouteStops");
					this.OnRouteStopsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteDistances", DbType="VarChar(350) NOT NULL", CanBeNull=false)]
		public string RouteDistances
		{
			get
			{
				return this._RouteDistances;
			}
			set
			{
				if ((this._RouteDistances != value))
				{
					this.OnRouteDistancesChanging(value);
					this.SendPropertyChanging();
					this._RouteDistances = value;
					this.SendPropertyChanged("RouteDistances");
					this.OnRouteDistancesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDistance", DbType="Float NOT NULL")]
		public double TotalDistance
		{
			get
			{
				return this._TotalDistance;
			}
			set
			{
				if ((this._TotalDistance != value))
				{
					this.OnTotalDistanceChanging(value);
					this.SendPropertyChanging();
					this._TotalDistance = value;
					this.SendPropertyChanged("TotalDistance");
					this.OnTotalDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TripTime", DbType="Int")]
		public System.Nullable<int> TripTime
		{
			get
			{
				return this._TripTime;
			}
			set
			{
				if ((this._TripTime != value))
				{
					this.OnTripTimeChanging(value);
					this.SendPropertyChanging();
					this._TripTime = value;
					this.SendPropertyChanged("TripTime");
					this.OnTripTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TravelRoute_BusRoute", Storage="_BusRoutes", ThisKey="RouteNo", OtherKey="RouteNo")]
		public EntitySet<BusRoute> BusRoutes
		{
			get
			{
				return this._BusRoutes;
			}
			set
			{
				this._BusRoutes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TravelRoute_PassengerNotice", Storage="_PassengerNotices", ThisKey="RouteNo", OtherKey="RouteNo")]
		public EntitySet<PassengerNotice> PassengerNotices
		{
			get
			{
				return this._PassengerNotices;
			}
			set
			{
				this._PassengerNotices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TravelRoute_StopsLog", Storage="_StopsLogs", ThisKey="RouteNo", OtherKey="RouteNo")]
		public EntitySet<StopsLog> StopsLogs
		{
			get
			{
				return this._StopsLogs;
			}
			set
			{
				this._StopsLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TravelRoute_TimeTable", Storage="_TimeTables", ThisKey="RouteNo", OtherKey="RouteNo")]
		public EntitySet<TimeTable> TimeTables
		{
			get
			{
				return this._TimeTables;
			}
			set
			{
				this._TimeTables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BusRoutes(BusRoute entity)
		{
			this.SendPropertyChanging();
			entity.TravelRoute = this;
		}
		
		private void detach_BusRoutes(BusRoute entity)
		{
			this.SendPropertyChanging();
			entity.TravelRoute = null;
		}
		
		private void attach_PassengerNotices(PassengerNotice entity)
		{
			this.SendPropertyChanging();
			entity.TravelRoute = this;
		}
		
		private void detach_PassengerNotices(PassengerNotice entity)
		{
			this.SendPropertyChanging();
			entity.TravelRoute = null;
		}
		
		private void attach_StopsLogs(StopsLog entity)
		{
			this.SendPropertyChanging();
			entity.TravelRoute = this;
		}
		
		private void detach_StopsLogs(StopsLog entity)
		{
			this.SendPropertyChanging();
			entity.TravelRoute = null;
		}
		
		private void attach_TimeTables(TimeTable entity)
		{
			this.SendPropertyChanging();
			entity.TravelRoute = this;
		}
		
		private void detach_TimeTables(TimeTable entity)
		{
			this.SendPropertyChanging();
			entity.TravelRoute = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusRoute")]
	public partial class BusRoute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BusLicPlate;
		
		private string _RouteNo;
		
		private string _TabledTime;
		
		private double _DistToFinalStop;
		
		private double _DistToNextStop;
		
		private string _SpdAtStops;
		
		private double _AvgSpeed;
		
		private int _StopsToGo;
		
		private string _NextStop;
		
		private string _LastStop;
		
		private int _ETANextStop;
		
		private int _ETAFinalStop;
		
		private EntityRef<Buse> _Buse;
		
		private EntityRef<TravelRoute> _TravelRoute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusLicPlateChanging(string value);
    partial void OnBusLicPlateChanged();
    partial void OnRouteNoChanging(string value);
    partial void OnRouteNoChanged();
    partial void OnTabledTimeChanging(string value);
    partial void OnTabledTimeChanged();
    partial void OnDistToFinalStopChanging(double value);
    partial void OnDistToFinalStopChanged();
    partial void OnDistToNextStopChanging(double value);
    partial void OnDistToNextStopChanged();
    partial void OnSpdAtStopsChanging(string value);
    partial void OnSpdAtStopsChanged();
    partial void OnAvgSpeedChanging(double value);
    partial void OnAvgSpeedChanged();
    partial void OnStopsToGoChanging(int value);
    partial void OnStopsToGoChanged();
    partial void OnNextStopChanging(string value);
    partial void OnNextStopChanged();
    partial void OnLastStopChanging(string value);
    partial void OnLastStopChanged();
    partial void OnETANextStopChanging(int value);
    partial void OnETANextStopChanged();
    partial void OnETAFinalStopChanging(int value);
    partial void OnETAFinalStopChanged();
    #endregion
		
		public BusRoute()
		{
			this._Buse = default(EntityRef<Buse>);
			this._TravelRoute = default(EntityRef<TravelRoute>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusLicPlate", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BusLicPlate
		{
			get
			{
				return this._BusLicPlate;
			}
			set
			{
				if ((this._BusLicPlate != value))
				{
					if (this._Buse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusLicPlateChanging(value);
					this.SendPropertyChanging();
					this._BusLicPlate = value;
					this.SendPropertyChanged("BusLicPlate");
					this.OnBusLicPlateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteNo", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string RouteNo
		{
			get
			{
				return this._RouteNo;
			}
			set
			{
				if ((this._RouteNo != value))
				{
					if (this._TravelRoute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteNoChanging(value);
					this.SendPropertyChanging();
					this._RouteNo = value;
					this.SendPropertyChanged("RouteNo");
					this.OnRouteNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabledTime", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string TabledTime
		{
			get
			{
				return this._TabledTime;
			}
			set
			{
				if ((this._TabledTime != value))
				{
					this.OnTabledTimeChanging(value);
					this.SendPropertyChanging();
					this._TabledTime = value;
					this.SendPropertyChanged("TabledTime");
					this.OnTabledTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistToFinalStop", DbType="Float NOT NULL")]
		public double DistToFinalStop
		{
			get
			{
				return this._DistToFinalStop;
			}
			set
			{
				if ((this._DistToFinalStop != value))
				{
					this.OnDistToFinalStopChanging(value);
					this.SendPropertyChanging();
					this._DistToFinalStop = value;
					this.SendPropertyChanged("DistToFinalStop");
					this.OnDistToFinalStopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistToNextStop", DbType="Float NOT NULL")]
		public double DistToNextStop
		{
			get
			{
				return this._DistToNextStop;
			}
			set
			{
				if ((this._DistToNextStop != value))
				{
					this.OnDistToNextStopChanging(value);
					this.SendPropertyChanging();
					this._DistToNextStop = value;
					this.SendPropertyChanged("DistToNextStop");
					this.OnDistToNextStopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpdAtStops", DbType="VarChar(350) NOT NULL", CanBeNull=false)]
		public string SpdAtStops
		{
			get
			{
				return this._SpdAtStops;
			}
			set
			{
				if ((this._SpdAtStops != value))
				{
					this.OnSpdAtStopsChanging(value);
					this.SendPropertyChanging();
					this._SpdAtStops = value;
					this.SendPropertyChanged("SpdAtStops");
					this.OnSpdAtStopsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgSpeed", DbType="Float NOT NULL")]
		public double AvgSpeed
		{
			get
			{
				return this._AvgSpeed;
			}
			set
			{
				if ((this._AvgSpeed != value))
				{
					this.OnAvgSpeedChanging(value);
					this.SendPropertyChanging();
					this._AvgSpeed = value;
					this.SendPropertyChanged("AvgSpeed");
					this.OnAvgSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopsToGo", DbType="Int NOT NULL")]
		public int StopsToGo
		{
			get
			{
				return this._StopsToGo;
			}
			set
			{
				if ((this._StopsToGo != value))
				{
					this.OnStopsToGoChanging(value);
					this.SendPropertyChanging();
					this._StopsToGo = value;
					this.SendPropertyChanged("StopsToGo");
					this.OnStopsToGoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextStop", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string NextStop
		{
			get
			{
				return this._NextStop;
			}
			set
			{
				if ((this._NextStop != value))
				{
					this.OnNextStopChanging(value);
					this.SendPropertyChanging();
					this._NextStop = value;
					this.SendPropertyChanged("NextStop");
					this.OnNextStopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastStop", DbType="VarChar(15)")]
		public string LastStop
		{
			get
			{
				return this._LastStop;
			}
			set
			{
				if ((this._LastStop != value))
				{
					this.OnLastStopChanging(value);
					this.SendPropertyChanging();
					this._LastStop = value;
					this.SendPropertyChanged("LastStop");
					this.OnLastStopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETANextStop", DbType="Int NOT NULL")]
		public int ETANextStop
		{
			get
			{
				return this._ETANextStop;
			}
			set
			{
				if ((this._ETANextStop != value))
				{
					this.OnETANextStopChanging(value);
					this.SendPropertyChanging();
					this._ETANextStop = value;
					this.SendPropertyChanged("ETANextStop");
					this.OnETANextStopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETAFinalStop", DbType="Int NOT NULL")]
		public int ETAFinalStop
		{
			get
			{
				return this._ETAFinalStop;
			}
			set
			{
				if ((this._ETAFinalStop != value))
				{
					this.OnETAFinalStopChanging(value);
					this.SendPropertyChanging();
					this._ETAFinalStop = value;
					this.SendPropertyChanged("ETAFinalStop");
					this.OnETAFinalStopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buse_BusRoute", Storage="_Buse", ThisKey="BusLicPlate", OtherKey="LicensePlate", IsForeignKey=true)]
		public Buse Buse
		{
			get
			{
				return this._Buse.Entity;
			}
			set
			{
				Buse previousValue = this._Buse.Entity;
				if (((previousValue != value) 
							|| (this._Buse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buse.Entity = null;
						previousValue.BusRoute = null;
					}
					this._Buse.Entity = value;
					if ((value != null))
					{
						value.BusRoute = this;
						this._BusLicPlate = value.LicensePlate;
					}
					else
					{
						this._BusLicPlate = default(string);
					}
					this.SendPropertyChanged("Buse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TravelRoute_BusRoute", Storage="_TravelRoute", ThisKey="RouteNo", OtherKey="RouteNo", IsForeignKey=true)]
		public TravelRoute TravelRoute
		{
			get
			{
				return this._TravelRoute.Entity;
			}
			set
			{
				TravelRoute previousValue = this._TravelRoute.Entity;
				if (((previousValue != value) 
							|| (this._TravelRoute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TravelRoute.Entity = null;
						previousValue.BusRoutes.Remove(this);
					}
					this._TravelRoute.Entity = value;
					if ((value != null))
					{
						value.BusRoutes.Add(this);
						this._RouteNo = value.RouteNo;
					}
					else
					{
						this._RouteNo = default(string);
					}
					this.SendPropertyChanged("TravelRoute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Driver")]
	public partial class Driver
	{
		
		private string _IDNo;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _TRN;
		
		private string _StreetAddress;
		
		private string _Parish;
		
		public Driver()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string IDNo
		{
			get
			{
				return this._IDNo;
			}
			set
			{
				if ((this._IDNo != value))
				{
					this._IDNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRN", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TRN
		{
			get
			{
				return this._TRN;
			}
			set
			{
				if ((this._TRN != value))
				{
					this._TRN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetAddress", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string StreetAddress
		{
			get
			{
				return this._StreetAddress;
			}
			set
			{
				if ((this._StreetAddress != value))
				{
					this._StreetAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parish", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Parish
		{
			get
			{
				return this._Parish;
			}
			set
			{
				if ((this._Parish != value))
				{
					this._Parish = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PassengerNotice")]
	public partial class PassengerNotice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserName;
		
		private string _StopNo;
		
		private string _RouteNo;
		
		private string _TabledTime;
		
		private string _CellNo;
		
		private string _Email;
		
		private EntityRef<TravelRoute> _TravelRoute;
		
		private EntityRef<Stop> _Stop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnStopNoChanging(string value);
    partial void OnStopNoChanged();
    partial void OnRouteNoChanging(string value);
    partial void OnRouteNoChanged();
    partial void OnTabledTimeChanging(string value);
    partial void OnTabledTimeChanged();
    partial void OnCellNoChanging(string value);
    partial void OnCellNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public PassengerNotice()
		{
			this._TravelRoute = default(EntityRef<TravelRoute>);
			this._Stop = default(EntityRef<Stop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopNo", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string StopNo
		{
			get
			{
				return this._StopNo;
			}
			set
			{
				if ((this._StopNo != value))
				{
					if (this._Stop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStopNoChanging(value);
					this.SendPropertyChanging();
					this._StopNo = value;
					this.SendPropertyChanged("StopNo");
					this.OnStopNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteNo", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RouteNo
		{
			get
			{
				return this._RouteNo;
			}
			set
			{
				if ((this._RouteNo != value))
				{
					if (this._TravelRoute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteNoChanging(value);
					this.SendPropertyChanging();
					this._RouteNo = value;
					this.SendPropertyChanged("RouteNo");
					this.OnRouteNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabledTime", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string TabledTime
		{
			get
			{
				return this._TabledTime;
			}
			set
			{
				if ((this._TabledTime != value))
				{
					this.OnTabledTimeChanging(value);
					this.SendPropertyChanging();
					this._TabledTime = value;
					this.SendPropertyChanged("TabledTime");
					this.OnTabledTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string CellNo
		{
			get
			{
				return this._CellNo;
			}
			set
			{
				if ((this._CellNo != value))
				{
					this.OnCellNoChanging(value);
					this.SendPropertyChanging();
					this._CellNo = value;
					this.SendPropertyChanged("CellNo");
					this.OnCellNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TravelRoute_PassengerNotice", Storage="_TravelRoute", ThisKey="RouteNo", OtherKey="RouteNo", IsForeignKey=true)]
		public TravelRoute TravelRoute
		{
			get
			{
				return this._TravelRoute.Entity;
			}
			set
			{
				TravelRoute previousValue = this._TravelRoute.Entity;
				if (((previousValue != value) 
							|| (this._TravelRoute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TravelRoute.Entity = null;
						previousValue.PassengerNotices.Remove(this);
					}
					this._TravelRoute.Entity = value;
					if ((value != null))
					{
						value.PassengerNotices.Add(this);
						this._RouteNo = value.RouteNo;
					}
					else
					{
						this._RouteNo = default(string);
					}
					this.SendPropertyChanged("TravelRoute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stop_PassengerNotice", Storage="_Stop", ThisKey="StopNo", OtherKey="StopNo", IsForeignKey=true)]
		public Stop Stop
		{
			get
			{
				return this._Stop.Entity;
			}
			set
			{
				Stop previousValue = this._Stop.Entity;
				if (((previousValue != value) 
							|| (this._Stop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stop.Entity = null;
						previousValue.PassengerNotices.Remove(this);
					}
					this._Stop.Entity = value;
					if ((value != null))
					{
						value.PassengerNotices.Add(this);
						this._StopNo = value.StopNo;
					}
					else
					{
						this._StopNo = default(string);
					}
					this.SendPropertyChanged("Stop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhoneMessages")]
	public partial class PhoneMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserName;
		
		private System.DateTime _Time;
		
		private string _Message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
		
		public PhoneMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(140) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stops")]
	public partial class Stop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _StopNo;
		
		private double _Lattitude;
		
		private double _Longitude;
		
		private string _Location;
		
		private string _Type;
		
		private EntitySet<PassengerNotice> _PassengerNotices;
		
		private EntitySet<StopsLog> _StopsLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStopNoChanging(string value);
    partial void OnStopNoChanged();
    partial void OnLattitudeChanging(double value);
    partial void OnLattitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public Stop()
		{
			this._PassengerNotices = new EntitySet<PassengerNotice>(new Action<PassengerNotice>(this.attach_PassengerNotices), new Action<PassengerNotice>(this.detach_PassengerNotices));
			this._StopsLogs = new EntitySet<StopsLog>(new Action<StopsLog>(this.attach_StopsLogs), new Action<StopsLog>(this.detach_StopsLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopNo", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string StopNo
		{
			get
			{
				return this._StopNo;
			}
			set
			{
				if ((this._StopNo != value))
				{
					this.OnStopNoChanging(value);
					this.SendPropertyChanging();
					this._StopNo = value;
					this.SendPropertyChanged("StopNo");
					this.OnStopNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lattitude", DbType="Float NOT NULL")]
		public double Lattitude
		{
			get
			{
				return this._Lattitude;
			}
			set
			{
				if ((this._Lattitude != value))
				{
					this.OnLattitudeChanging(value);
					this.SendPropertyChanging();
					this._Lattitude = value;
					this.SendPropertyChanged("Lattitude");
					this.OnLattitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(10)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stop_PassengerNotice", Storage="_PassengerNotices", ThisKey="StopNo", OtherKey="StopNo")]
		public EntitySet<PassengerNotice> PassengerNotices
		{
			get
			{
				return this._PassengerNotices;
			}
			set
			{
				this._PassengerNotices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stop_StopsLog", Storage="_StopsLogs", ThisKey="StopNo", OtherKey="StopNo")]
		public EntitySet<StopsLog> StopsLogs
		{
			get
			{
				return this._StopsLogs;
			}
			set
			{
				this._StopsLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PassengerNotices(PassengerNotice entity)
		{
			this.SendPropertyChanging();
			entity.Stop = this;
		}
		
		private void detach_PassengerNotices(PassengerNotice entity)
		{
			this.SendPropertyChanging();
			entity.Stop = null;
		}
		
		private void attach_StopsLogs(StopsLog entity)
		{
			this.SendPropertyChanging();
			entity.Stop = this;
		}
		
		private void detach_StopsLogs(StopsLog entity)
		{
			this.SendPropertyChanging();
			entity.Stop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StopsLog")]
	public partial class StopsLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogNo;
		
		private string _RouteNo;
		
		private string _StopNo;
		
		private System.DateTime _StopDateTime;
		
		private string _BusLicPlate;
		
		private string _TabledTime;
		
		private EntityRef<Buse> _Buse;
		
		private EntityRef<TravelRoute> _TravelRoute;
		
		private EntityRef<Stop> _Stop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogNoChanging(int value);
    partial void OnLogNoChanged();
    partial void OnRouteNoChanging(string value);
    partial void OnRouteNoChanged();
    partial void OnStopNoChanging(string value);
    partial void OnStopNoChanged();
    partial void OnStopDateTimeChanging(System.DateTime value);
    partial void OnStopDateTimeChanged();
    partial void OnBusLicPlateChanging(string value);
    partial void OnBusLicPlateChanged();
    partial void OnTabledTimeChanging(string value);
    partial void OnTabledTimeChanged();
    #endregion
		
		public StopsLog()
		{
			this._Buse = default(EntityRef<Buse>);
			this._TravelRoute = default(EntityRef<TravelRoute>);
			this._Stop = default(EntityRef<Stop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogNo
		{
			get
			{
				return this._LogNo;
			}
			set
			{
				if ((this._LogNo != value))
				{
					this.OnLogNoChanging(value);
					this.SendPropertyChanging();
					this._LogNo = value;
					this.SendPropertyChanged("LogNo");
					this.OnLogNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteNo", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string RouteNo
		{
			get
			{
				return this._RouteNo;
			}
			set
			{
				if ((this._RouteNo != value))
				{
					if (this._TravelRoute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteNoChanging(value);
					this.SendPropertyChanging();
					this._RouteNo = value;
					this.SendPropertyChanged("RouteNo");
					this.OnRouteNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopNo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string StopNo
		{
			get
			{
				return this._StopNo;
			}
			set
			{
				if ((this._StopNo != value))
				{
					if (this._Stop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStopNoChanging(value);
					this.SendPropertyChanging();
					this._StopNo = value;
					this.SendPropertyChanged("StopNo");
					this.OnStopNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StopDateTime
		{
			get
			{
				return this._StopDateTime;
			}
			set
			{
				if ((this._StopDateTime != value))
				{
					this.OnStopDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StopDateTime = value;
					this.SendPropertyChanged("StopDateTime");
					this.OnStopDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusLicPlate", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string BusLicPlate
		{
			get
			{
				return this._BusLicPlate;
			}
			set
			{
				if ((this._BusLicPlate != value))
				{
					if (this._Buse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusLicPlateChanging(value);
					this.SendPropertyChanging();
					this._BusLicPlate = value;
					this.SendPropertyChanged("BusLicPlate");
					this.OnBusLicPlateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabledTime", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string TabledTime
		{
			get
			{
				return this._TabledTime;
			}
			set
			{
				if ((this._TabledTime != value))
				{
					this.OnTabledTimeChanging(value);
					this.SendPropertyChanging();
					this._TabledTime = value;
					this.SendPropertyChanged("TabledTime");
					this.OnTabledTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buse_StopsLog", Storage="_Buse", ThisKey="BusLicPlate", OtherKey="LicensePlate", IsForeignKey=true)]
		public Buse Buse
		{
			get
			{
				return this._Buse.Entity;
			}
			set
			{
				Buse previousValue = this._Buse.Entity;
				if (((previousValue != value) 
							|| (this._Buse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buse.Entity = null;
						previousValue.StopsLogs.Remove(this);
					}
					this._Buse.Entity = value;
					if ((value != null))
					{
						value.StopsLogs.Add(this);
						this._BusLicPlate = value.LicensePlate;
					}
					else
					{
						this._BusLicPlate = default(string);
					}
					this.SendPropertyChanged("Buse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TravelRoute_StopsLog", Storage="_TravelRoute", ThisKey="RouteNo", OtherKey="RouteNo", IsForeignKey=true)]
		public TravelRoute TravelRoute
		{
			get
			{
				return this._TravelRoute.Entity;
			}
			set
			{
				TravelRoute previousValue = this._TravelRoute.Entity;
				if (((previousValue != value) 
							|| (this._TravelRoute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TravelRoute.Entity = null;
						previousValue.StopsLogs.Remove(this);
					}
					this._TravelRoute.Entity = value;
					if ((value != null))
					{
						value.StopsLogs.Add(this);
						this._RouteNo = value.RouteNo;
					}
					else
					{
						this._RouteNo = default(string);
					}
					this.SendPropertyChanged("TravelRoute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stop_StopsLog", Storage="_Stop", ThisKey="StopNo", OtherKey="StopNo", IsForeignKey=true)]
		public Stop Stop
		{
			get
			{
				return this._Stop.Entity;
			}
			set
			{
				Stop previousValue = this._Stop.Entity;
				if (((previousValue != value) 
							|| (this._Stop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stop.Entity = null;
						previousValue.StopsLogs.Remove(this);
					}
					this._Stop.Entity = value;
					if ((value != null))
					{
						value.StopsLogs.Add(this);
						this._StopNo = value.StopNo;
					}
					else
					{
						this._StopNo = default(string);
					}
					this.SendPropertyChanged("Stop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeTable")]
	public partial class TimeTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RouteNo;
		
		private string _Time;
		
		private string _Day;
		
		private EntityRef<TravelRoute> _TravelRoute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRouteNoChanging(string value);
    partial void OnRouteNoChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnDayChanging(string value);
    partial void OnDayChanged();
    #endregion
		
		public TimeTable()
		{
			this._TravelRoute = default(EntityRef<TravelRoute>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteNo", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RouteNo
		{
			get
			{
				return this._RouteNo;
			}
			set
			{
				if ((this._RouteNo != value))
				{
					if (this._TravelRoute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteNoChanging(value);
					this.SendPropertyChanging();
					this._RouteNo = value;
					this.SendPropertyChanged("RouteNo");
					this.OnRouteNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="VarChar(10)")]
		public string Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TravelRoute_TimeTable", Storage="_TravelRoute", ThisKey="RouteNo", OtherKey="RouteNo", IsForeignKey=true)]
		public TravelRoute TravelRoute
		{
			get
			{
				return this._TravelRoute.Entity;
			}
			set
			{
				TravelRoute previousValue = this._TravelRoute.Entity;
				if (((previousValue != value) 
							|| (this._TravelRoute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TravelRoute.Entity = null;
						previousValue.TimeTables.Remove(this);
					}
					this._TravelRoute.Entity = value;
					if ((value != null))
					{
						value.TimeTables.Add(this);
						this._RouteNo = value.RouteNo;
					}
					else
					{
						this._RouteNo = default(string);
					}
					this.SendPropertyChanged("TravelRoute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SelectTrackedBusesResult
	{
		
		private string _LicensePlate;
		
		private string _Type;
		
		private string _BusStatus;
		
		private System.Nullable<int> _SeatCap;
		
		public SelectTrackedBusesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicensePlate", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string LicensePlate
		{
			get
			{
				return this._LicensePlate;
			}
			set
			{
				if ((this._LicensePlate != value))
				{
					this._LicensePlate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusStatus", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string BusStatus
		{
			get
			{
				return this._BusStatus;
			}
			set
			{
				if ((this._BusStatus != value))
				{
					this._BusStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatCap", DbType="Int")]
		public System.Nullable<int> SeatCap
		{
			get
			{
				return this._SeatCap;
			}
			set
			{
				if ((this._SeatCap != value))
				{
					this._SeatCap = value;
				}
			}
		}
	}
	
	public partial class SelectAllStopsResult
	{
		
		private string _StopNo;
		
		private double _Lattitude;
		
		private double _Longitude;
		
		private string _Location;
		
		private string _Type;
		
		public SelectAllStopsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopNo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string StopNo
		{
			get
			{
				return this._StopNo;
			}
			set
			{
				if ((this._StopNo != value))
				{
					this._StopNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lattitude", DbType="Float NOT NULL")]
		public double Lattitude
		{
			get
			{
				return this._Lattitude;
			}
			set
			{
				if ((this._Lattitude != value))
				{
					this._Lattitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this._Longitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this._Location = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(10)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
	}
	
	public partial class SelectStopsByRouteResult
	{
		
		private string _RouteNo;
		
		private string _RouteStops;
		
		private string _RouteDistances;
		
		private double _TotalDistance;
		
		private System.Nullable<int> _TripTime;
		
		public SelectStopsByRouteResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteNo", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string RouteNo
		{
			get
			{
				return this._RouteNo;
			}
			set
			{
				if ((this._RouteNo != value))
				{
					this._RouteNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteStops", DbType="VarChar(350) NOT NULL", CanBeNull=false)]
		public string RouteStops
		{
			get
			{
				return this._RouteStops;
			}
			set
			{
				if ((this._RouteStops != value))
				{
					this._RouteStops = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteDistances", DbType="VarChar(350) NOT NULL", CanBeNull=false)]
		public string RouteDistances
		{
			get
			{
				return this._RouteDistances;
			}
			set
			{
				if ((this._RouteDistances != value))
				{
					this._RouteDistances = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDistance", DbType="Float NOT NULL")]
		public double TotalDistance
		{
			get
			{
				return this._TotalDistance;
			}
			set
			{
				if ((this._TotalDistance != value))
				{
					this._TotalDistance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TripTime", DbType="Int")]
		public System.Nullable<int> TripTime
		{
			get
			{
				return this._TripTime;
			}
			set
			{
				if ((this._TripTime != value))
				{
					this._TripTime = value;
				}
			}
		}
	}
	
	public partial class SelectDistinctRoutesResult
	{
		
		private string _RouteNo;
		
		public SelectDistinctRoutesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteNo", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string RouteNo
		{
			get
			{
				return this._RouteNo;
			}
			set
			{
				if ((this._RouteNo != value))
				{
					this._RouteNo = value;
				}
			}
		}
	}
	
	public partial class SelectAllRoutesResult
	{
		
		private string _RouteNo;
		
		private string _RouteStops;
		
		private string _RouteDistances;
		
		private double _TotalDistance;
		
		private System.Nullable<int> _TripTime;
		
		public SelectAllRoutesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteNo", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string RouteNo
		{
			get
			{
				return this._RouteNo;
			}
			set
			{
				if ((this._RouteNo != value))
				{
					this._RouteNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteStops", DbType="VarChar(350) NOT NULL", CanBeNull=false)]
		public string RouteStops
		{
			get
			{
				return this._RouteStops;
			}
			set
			{
				if ((this._RouteStops != value))
				{
					this._RouteStops = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteDistances", DbType="VarChar(350) NOT NULL", CanBeNull=false)]
		public string RouteDistances
		{
			get
			{
				return this._RouteDistances;
			}
			set
			{
				if ((this._RouteDistances != value))
				{
					this._RouteDistances = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDistance", DbType="Float NOT NULL")]
		public double TotalDistance
		{
			get
			{
				return this._TotalDistance;
			}
			set
			{
				if ((this._TotalDistance != value))
				{
					this._TotalDistance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TripTime", DbType="Int")]
		public System.Nullable<int> TripTime
		{
			get
			{
				return this._TripTime;
			}
			set
			{
				if ((this._TripTime != value))
				{
					this._TripTime = value;
				}
			}
		}
	}
	
	public partial class SelectStopsByRouteFullResult
	{
		
		private string _StopNo;
		
		private double _Lattitude;
		
		private double _Longitude;
		
		private string _Location;
		
		private string _Type;
		
		public SelectStopsByRouteFullResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopNo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string StopNo
		{
			get
			{
				return this._StopNo;
			}
			set
			{
				if ((this._StopNo != value))
				{
					this._StopNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lattitude", DbType="Float NOT NULL")]
		public double Lattitude
		{
			get
			{
				return this._Lattitude;
			}
			set
			{
				if ((this._Lattitude != value))
				{
					this._Lattitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this._Longitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this._Location = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(10)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
